<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simon Ramsay</title>
    <description>A personal blog about shitty infrequent random programing tips</description>
    <link>https://ramsay.xyz/</link>
    <atom:link href="https://ramsay.xyz/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 25 May 2018 20:55:50 -0500</pubDate>
    <lastBuildDate>Fri, 25 May 2018 20:55:50 -0500</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Correction Of Error (COE) for ammobin.ca downtime</title>
        <description>&lt;h1 id=&quot;correction-of-error-coe-for-ammobinca-downtime&quot;&gt;Correction Of Error (COE) for ammobin.ca downtime&lt;/h1&gt;
&lt;p&gt;site was down for most of friday&lt;/p&gt;

&lt;h2 id=&quot;cause-droplet-disconnects-from-public-ip&quot;&gt;Cause: droplet disconnects from public ip&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;not able to ssh or ping&lt;/li&gt;
  &lt;li&gt;going through digital ocean console, able to access terminal, no ethX visible at all, even after many restarts&lt;/li&gt;
  &lt;li&gt;reach out to support at 9am pst. receive response 5pm pst. did not fix issue&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fix-created-new-droplet&quot;&gt;Fix: created new droplet&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;git clone ammobin-compose&lt;/li&gt;
  &lt;li&gt;filled out secrets (.env file)&lt;/li&gt;
  &lt;li&gt;docker-compose up -d&lt;/li&gt;
  &lt;li&gt;switch over dns record
new droplet starts getting traffic immediately&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;lessons-learned&quot;&gt;Lessons Learned:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ability to quickly spin up fresh machine is easy with docker compose (able to bring site back with 10mins of work)&lt;/li&gt;
  &lt;li&gt;external + automated backups are a good thing (lost dashboards + stats + cron jobs)&lt;/li&gt;
  &lt;li&gt;dont wait around on support people to fix things if able to just recreate&lt;/li&gt;
  &lt;li&gt;some cloud init scripts to set up machine for me (oh-my-zsh, docker, docker-compose) would be nice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;note: COE is an amazon thing that is well described here: &lt;a href=&quot;https://blog.mischel.com/2018/01/24/responding-to-errors-at-amazon/&quot;&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 25 May 2018 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2018/05/25/ammobin-coe.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2018/05/25/ammobin-coe.html</guid>
        
        <category>COE</category>
        
        <category>correction of error</category>
        
        <category>downtime</category>
        
        
      </item>
    
      <item>
        <title>How to (kinda) install pihole on a pine64-jessie using docker</title>
        <description>&lt;p&gt;More of half thoughts and documentation of what I did to get pihole running in docker on my pine64 at home. This is not intended to be a complete or through guide. Please google or duckduckgo for the full process of setting this up. Note: as of May 5, 2018, the docker image does not have dns logging enabled and I have been unable to turn it on manually.&lt;/p&gt;

&lt;h1 id=&quot;some-defs&quot;&gt;some defs&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pine64.org/?product=pine-a64-lts&quot;&gt;Pine64&lt;/a&gt;: “The Pine A64 is an index card sized 64-bit single board computer. It can perform like your desktop or portable PC with browsing the Internet, playing games, watching video, and execute programs like spreadsheets and word-processing. The Pine A64 board can also play ultra high definition 4Kx2K video.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;Docker&lt;/a&gt;: “Docker provides a way to run applications securely isolated in a container, packaged with all its dependencies and libraries.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;pihole&lt;/a&gt;: “A black hole for Internet advertisements”&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;install-docker&quot;&gt;install docker&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;add some pre-reqs
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  apt-transport-https &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  ca-certificates &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  curl &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  gnupg2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;add docker signing key &lt;code class=&quot;highlighter-rouge&quot;&gt;curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -&lt;/code&gt;  (&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/debian/#set-up-the-repository&quot;&gt;src&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;add &lt;em&gt;deb https://download.docker.com/linux/debian jessie stable&lt;/em&gt; to &lt;em&gt;/etc/apt/sources.list.d/docker.list&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;actually install docker &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install docker-ce&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;pull-image--run&quot;&gt;pull image + run&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;create some configs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;create docker service to run in background with name = pihole and configs located in current directory
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;IP_LOOKUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ip route get 8.8.8.8 | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $NF; exit }'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# May not work for VPN / tun0&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$IP_LOOKUP&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# use $IP, if set, otherwise IP_LOOKUP&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;DOCKER_CONFIGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Default of directory you run this from, update to where ever.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; pihole &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 53:53/tcp &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 53:53/udp &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DOCKER_CONFIGS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/pihole/:/etc/pihole/&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DOCKER_CONFIGS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dnsmasq.d/:/etc/dnsmasq.d/&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ServerIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-$(&lt;/span&gt;ip route get 8.8.8.8 | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $NF; exit }'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;--restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 diginc/pi-hole-multiarch:debian_aarch64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;note: must use &lt;strong&gt;diginc/pi-hole-multiarch:debian_aarch64&lt;/strong&gt;, other ones will not run on the pine64&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;to have pihole start on boot, run &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt; and add the line &lt;em&gt;@reboot docker start pihole&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 05 May 2018 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2018/05/05/pihole-pine64-docker.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2018/05/05/pihole-pine64-docker.html</guid>
        
        <category>pihole</category>
        
        <category>pine64</category>
        
        <category>docker</category>
        
        <category>add blockers</category>
        
        
      </item>
    
      <item>
        <title>How to enable syntax highlighting in VSCode for Mason files</title>
        <description>&lt;p&gt;By default &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt; does not detect that &lt;a href=&quot;http://www.masonhq.com/&quot;&gt;Mason&lt;/a&gt; files are perl files. Adding the following to your user preferences will do a pretty good job of adding some colour to your Mason development:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;files.associations&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*.mas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autohandler&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;perl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*.mi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;perl&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 14 Apr 2018 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2018/04/14/vscode-mason-syntax-highlighting.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2018/04/14/vscode-mason-syntax-highlighting.html</guid>
        
        <category>mason</category>
        
        <category>perl</category>
        
        <category>vscode</category>
        
        
      </item>
    
      <item>
        <title>Redesigned ramsay.xyz</title>
        <description>&lt;p&gt;Gave ramsay.xyz a little css refresh. Moved from generic dev blog jekyll template to &lt;a href=&quot;http://brutalistwebsites.com/&quot;&gt;web brutalism&lt;/a&gt; (based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Brutalist_architecture&quot;&gt;brutalist architecture&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&quot;before&quot;&gt;Before:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/before-main.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/before-article.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;after&quot;&gt;After:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/after-main.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/after-article.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Apr 2018 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2018/04/14/redesigned-ramsay.xyz.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2018/04/14/redesigned-ramsay.xyz.html</guid>
        
        <category>ramsay.xyz</category>
        
        <category>redesign</category>
        
        <category>brutalism</category>
        
        
      </item>
    
      <item>
        <title>Made a crummy aws cost calculator for Fargate using Preact</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/ecs.png&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;/assets/preact.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last month, Amazon released AWS Fargate for ECS which removed the need to manage the underling EC2s of an ECS cluster. Amazon carges by the second for this service based on vCPU + Memory, but I wanted to know the total hourly cost for this. So I made a cost calculator for it using &lt;a href=&quot;https://preactjs.com/&quot;&gt;Preact&lt;/a&gt; (“Fast 3kB alternative to React with the same ES6 API.”). After selecting some ec2 configurations, it was clear to me that this costs more than the ec2 based solution (even ignoring spot instance pricing) BUT it is easier and has fewer things to worry about.&lt;/p&gt;

&lt;p&gt;site: &lt;a href=&quot;https://nexus-uw.github.io/crappy-preact-fargate-calculator/&quot;&gt;https://nexus-uw.github.io/crappy-preact-fargate-calculator/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;source: &lt;a href=&quot;https://github.com/nexus-uw/crappy-preact-fargate-calculator&quot;&gt;https://github.com/nexus-uw/crappy-preact-fargate-calculator&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Dec 2017 00:00:00 -0600</pubDate>
        <link>https://ramsay.xyz/2017/12/23/crummy-fargate-calc.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/12/23/crummy-fargate-calc.html</guid>
        
        <category>preact</category>
        
        <category>fargate</category>
        
        <category>aws</category>
        
        
      </item>
    
      <item>
        <title>Unit Testing CloudFormation Templates</title>
        <description>&lt;p&gt;Below is a quick mocha/jasmine test suite for validating all CloudFormation templates in a directory&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'aws-sdk'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CloudFormation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;region&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'us-east-1'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./Path/to/folder/containing/templates'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CloudFormation Templates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`should validate &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validateTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;TemplateBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This can be helpful in quickly failing a CI/CD pipeline before trying to deploy an invalid* template.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Dec 2017 00:00:00 -0600</pubDate>
        <link>https://ramsay.xyz/2017/12/22/unit-testing-cloudformation.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/12/22/unit-testing-cloudformation.html</guid>
        
        <category>CloudFormation</category>
        
        <category>unit testing</category>
        
        <category>nodejs</category>
        
        
      </item>
    
      <item>
        <title>Easy ECS Login</title>
        <description>&lt;p&gt;just run&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(aws ecr get-login --no-include-email)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which will have the aws cli generate the docker login command and then zsh will run that command&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Nov 2017 00:00:00 -0600</pubDate>
        <link>https://ramsay.xyz/2017/11/08/easy-ecs-login.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/11/08/easy-ecs-login.html</guid>
        
        <category>docker</category>
        
        <category>zsh</category>
        
        <category>ecs</category>
        
        
      </item>
    
      <item>
        <title>I Have Mastered Elm By Making Yet Another Calculator (For AWS ElasticCache), And So Can You</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/elastic-cache-elm.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As a &lt;em&gt;fun&lt;/em&gt; task, I relearned first year pure functional programming using &lt;a href=&quot;http://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;.  To generate something more useful and exciting than YATA (&lt;strong&gt;Y&lt;/strong&gt;et &lt;strong&gt;A&lt;/strong&gt;nother &lt;strong&gt;T&lt;/strong&gt;odo &lt;strong&gt;A&lt;/strong&gt;pp), I decided to come up with a simple calculator for figuring out much it will cost per day to operate a Redis Cluster on AWS Elastic Cache for a given size + network speed.&lt;/p&gt;

&lt;p&gt;Take Aways&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Its amazing how much one can forget from 1st year CS&lt;/li&gt;
  &lt;li&gt;Even coming from writing functional-ish all day at work, pure functional programing is hard (really wished for an optional index param when iterating through a list)&lt;/li&gt;
  &lt;li&gt;Elm’s documentation code really be fleshed out to cover more than how to get things started and how the language compares to JS&lt;/li&gt;
  &lt;li&gt;Elm’s compilation errors were really clear and useful (especially in VS Code)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to check it out at:
&lt;a href=&quot;https://nexus-uw.github.io/elastic-cache-calculator/&quot;&gt;https://nexus-uw.github.io/elastic-cache-calculator/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source code is available at:
&lt;a href=&quot;https://github.com/nexus-uw/elastic-cache-calculator&quot;&gt;https://github.com/nexus-uw/elastic-cache-calculator&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2017/06/01/im-an-elm-master.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/06/01/im-an-elm-master.html</guid>
        
        <category>elm</category>
        
        <category>elastic cache</category>
        
        <category>calculator</category>
        
        <category>Jake Paul</category>
        
        
      </item>
    
      <item>
        <title>just released ammobin.ca</title>
        <description>&lt;p&gt;For the past month, I have been putting together &lt;a href=&quot;https://ammobin.ca/?src=ramsay.xyz&quot;&gt;ammobin.ca&lt;/a&gt; using &lt;a href=&quot;https://nuxtjs.org/&quot;&gt;nuxt.js&lt;/a&gt; (server-side vue.js) + &lt;a href=&quot;https://github.com/NaturalNode/natural&quot;&gt;natural&lt;/a&gt; (natural language classification).&lt;/p&gt;

&lt;p&gt;Feel free to check it out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ammobin.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2017/06/01/ammobinca.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/06/01/ammobinca.html</guid>
        
        <category>canada</category>
        
        <category>ammobin.ca</category>
        
        <category>nuxt.js</category>
        
        <category>vue.js</category>
        
        
      </item>
    
      <item>
        <title>ramsay.xyz Now Available as an Eepsite (I2P)</title>
        <description>&lt;p&gt;Here is a link to it: &lt;a href=&quot;http://ramsay.i2p&quot;&gt;ramsay.i2p&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note April 14 2018: currently offline while buggering around with things on host machine&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 -0500</pubDate>
        <link>https://ramsay.xyz/2017/03/28/site-also-available-as-an-eep-site.html</link>
        <guid isPermaLink="true">https://ramsay.xyz/2017/03/28/site-also-available-as-an-eep-site.html</guid>
        
        <category>i2p</category>
        
        <category>eepsite</category>
        
        <category>darknet</category>
        
        
      </item>
    
  </channel>
</rss>
